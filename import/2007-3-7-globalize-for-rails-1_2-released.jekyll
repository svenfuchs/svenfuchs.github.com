--- 
title: "Join the release-party: Globalize now ready for Rails 1.2!"
---
<h2>What's new?</h2>
	
<p>Of course, it's needless to talk about the jaw-dropping new features of <a href="http://weblog.rubyonrails.org/2007/1/19/rails-1-2-rest-admiration-http-lovefest-and-utf-8-celebrations">Rails 1.2</a> as that's been raved about for weeks now :) ... but as far as I18n is concerned the new UTF-8 wrangling <a href="http://www.fngtps.com/2006/10/activesupport-multibyte">ActiveSupport::MultiByte</a> tools are particulary of interest.</p>

<p>But not only that Globalize is now officially ready to join this party with its Globalize for-1.2 release ... there are even more good news about this.</p>

<p>First of all this is the first Globalize release whose development has been guarded by that <span style="text-decoration:line-through">gruesome</span> awesome beast <a href="http://cerberus.rubyforge.org/">Cerberus</a>. <a href="http://www.sans-savoir.net">Yann Lugrin</a> has done a great job in tying it with heavy chains to sit and wait in front of the code repository and bite the bad boys. As you're familiar with the concepts of <a href="http://www.martinfowler.com/articles/continuousIntegration.html">continuous integration</a> you most probably know how much this is worth.</p>

<p>Secondly, <a href="http://saimonmoore.net/">Saimon Moore's</a> awesome, alternative storage mechanism has been incorporated as a regular, <a href="http://www.artweb-design.de/articles/2007/01/31/upcoming-globalize-feature-an-alternative-way-of-storing-model-translations">alternative way of storing Globalize model translations</a>. Globalize now allows users to switch between the traditional and the new storage model. While Globalize traditionally stored model translations in a separate database table <code>globalize_translations</code>, with Saimons mechanism they now can be stored directly in the models database tables. This carries advantages with respect to the several ActiveRecord options that with the new model can all be used again.</p>

<p>Thirdly, Saimon has added a new feature called namespaced ViewTranslations (more on this soon) which allow you to key your ViewTranslations identically within different namespaces. This particular change requires a minor change to the database scheme. A Rake task included that will apply this for you (<a href="#schema-change">see below for details</a>).</p>

<p>Last but not lease, of course, several bugs have been fixed and stuff been cleaned up.</p>

<h2>Where is it?</h2>

<p>Like before, you can install Globalize from the Globalize Subversion repository. There are the following three versions:</p>

<ul>
	<li>for-1.2: svn://svn.globalize-rails.org/globalize/branches/for-1.2</li>
	<li>for-1.1: svn://svn.globalize-rails.org/globalize/branches/for-1.1</li>
	<li>edge: svn://svn.globalize-rails.org/globalize/trunk</li>
</ul>

<p>As the naming suggests, for-1.2 is for Rails 1.2. for-1.1 is for Rails 1.1. And egde/trunk is for those of you who are feeling really adventurous. We are trying to keep the repository trunk working with the Rails edge development, but sometimes it's hard to keep things in sync.</p>

<h2>Anything I need to take care of?</h2>

<p id="schema-change">Yes. The newly added namespaced ViewTranslations feature requires an additional column to be added to one of the Globalize database tables.</p>

<p>Just install the code and run the included Rake task for an easy upgrade:</p>

<pre>rake globalize:upgrade_schema_to_1_dot_2</pre>

<p>This really just adds a string column <code>namespace</code> to the table <code>globalize_translations</code>. So, nothing to be scared of :)</p>

<h2>What's to come?</h2>

<p>There are some exciting new features in the oven (e.g. a standard globalize method for a supported languages mechanism, a translatable strings extractor tool, globalizing more of Rails) ... nothing really done yet, but all enough reason to stay tuned :) Also, there are some remaining bugs to clean up.</p>

<p>Generally speaking, like before, Globalize will provide bug-fix support for the releases for-1.1 and for-1.2, while new features will go into trunk.</p>

<h2>Talk back!</h2>

<p>Please feel free to ask your questions and present your ideas! As always your feedback is <strong>very</strong> much appreciated. Here are some ways to get in touch with the Globalize community:</p>

<ul>
	<li>Register to the <a href="http://wiki.globalize-rails.org/globalize/show/MailingList">Globalize users mailinglist</a>. This is most probably the quickest way to get your questions answered.</li>
	<li>File bugs and feature requests in the <a href="http://trac.globalize-rails.org/trac/globalize/report">Globalize Trac</a> (you'll need to register and login). This is most probably the safest way to not get lost :)</li>
	<li>Add your tips and hints to the <a href="http://wiki.globalize-rails.org/globalize/">Globalize wiki</a>. This is most probably the most durable way to share your experiences.</li>
	<li>Also feel free to use the comments or write me an email.</li>
</ul>

